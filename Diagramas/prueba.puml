@startuml
title "test Guerrero ataca a una unidad de nombe Antony y una edad\n deberia hacerle daño 5 y devolver el danio"
create ":TestCase"
create "g:Guerrero"
":TestCase" -> "g:Guerrero":Guerrero()
create "u:Unidad"
":TestCase" -> "u:Unidad":Unidad("Antony", unaEdad)
":TestCase" -> "g:Guerrero":atacar(u)
alt unaEdad >= 10
    "g:Guerrero" --> ":TestCase": 10
else  unaEdad < 10
    "g:Guerrero" --> ":TestCase": 5
end alt
@enduml

// herencia
abstract class Figura{
    {abstract} +getArea():float
    #colorParaDibujo:String
}

class Rectangulo{
    -base:float;
    -altura:float
    +getArea():float
}
note left of Rectangulo::getArea{
    return base*altura;
}

class Circulo{
    -radio:float
    +getArea():float
}

note right of Circulo::getArea{
    return Math.PI*radio*radio;
}

Figura <|-- Circulo
Figura <|-- Rectangulo

// interfaces
interface  Cantante{
 {abstract} +cantar()
}
class Persona{
 +cantar()
}

class Canario{
 +cantar()
}

Cantante <|.. Persona
Cantante <|.. Canario

// sec 1
title "test Guerrero ataca a una unidad de nombe Antony y una edad\n deberia hacerle daño 5 y devolver el danio"
create ":TestCase"
create "g:Guerrero"
":TestCase" -> "g:Guerrero":Guerrero()
create "u:Unidad"
":TestCase" -> "u:Unidad":Unidad("Antony", unaEdad)
":TestCase" -> "g:Guerrero":atacar(u)
alt unaEdad >= 10
    "g:Guerrero" --> ":TestCase": 10
else  unaEdad < 10:
    "g:Guerrero" --> ":TestCase": 5
end alt

// sec 2

title "test Guerrero ataca a una unidad de nombe Antony y una edad de 12\n deberia hacerle daño 10 y devolver el danio"
create ":TestCase"
create "g:Guerrero"
":TestCase" -> "g:Guerrero":Guerrero()
create "u:Unidad"
":TestCase" -> "u:Unidad":Unidad("Antony", 12)
":TestCase" -> "g:Guerrero":atacar(u)
"g:Guerrero" --> ":TestCase": 10